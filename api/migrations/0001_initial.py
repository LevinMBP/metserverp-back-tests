# Generated by Django 4.0 on 2024-01-28 00:35

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=50, unique=True)),
                ('contact_person', models.CharField(blank=True, max_length=50, null=True)),
                ('contact_number', models.CharField(blank=True, max_length=10, null=True)),
                ('company_address', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'ordering': ['company_name'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=100, unique=True)),
                ('product_min_stock', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('product_note', models.TextField(blank=True, null=True)),
                ('date_created', models.DateTimeField(auto_now=True)),
                ('product_type', models.CharField(blank=True, choices=[('MANUFACTURED', 'MANUFACTURED'), ('IMPORTED', 'IMPORTED')], default='', max_length=15, null=True)),
            ],
            options={
                'ordering': ['product_name'],
            },
        ),
        migrations.CreateModel(
            name='Product_Inventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('product_stock_left', models.DecimalField(decimal_places=2, max_digits=10)),
                ('product_cost', models.DecimalField(decimal_places=6, max_digits=15)),
                ('product_total_cost', models.DecimalField(decimal_places=6, max_digits=18)),
                ('ordered_date', models.DateField(default=django.utils.timezone.now)),
                ('order_update', models.DateTimeField(auto_now=True)),
                ('inventory_note', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Product Inventories',
                'ordering': ['ordered_date'],
            },
        ),
        migrations.CreateModel(
            name='RawMaterials',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('material_name', models.CharField(max_length=100, unique=True)),
                ('material_min_stock', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('material_note', models.TextField(blank=True, null=True)),
                ('date_created', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Raw Materials',
                'ordering': ['material_name'],
            },
        ),
        migrations.CreateModel(
            name='RawMaterials_Inventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=4, max_digits=10)),
                ('material_stock_left', models.DecimalField(decimal_places=4, max_digits=10)),
                ('material_cost', models.DecimalField(decimal_places=6, max_digits=15)),
                ('material_total_cost', models.DecimalField(decimal_places=6, max_digits=18)),
                ('ordered_date', models.DateField(default=django.utils.timezone.now)),
                ('order_update', models.DateTimeField(auto_now=True)),
                ('inventory_note', models.TextField(blank=True, null=True)),
                ('material_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.rawmaterials')),
            ],
            options={
                'verbose_name_plural': 'Raw Material Inventories',
                'ordering': ['ordered_date'],
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=50, unique=True)),
                ('contact_person', models.CharField(blank=True, max_length=50, null=True)),
                ('contact_number', models.CharField(blank=True, max_length=10, null=True)),
                ('company_address', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'ordering': ['company_name'],
            },
        ),
        migrations.CreateModel(
            name='UnitCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit_category', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name_plural': 'Product Unit Category',
            },
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit_name', models.CharField(max_length=50)),
                ('unit_abbv', models.CharField(max_length=20)),
                ('unit_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.unitcategory')),
            ],
            options={
                'verbose_name_plural': 'Product Units',
            },
        ),
        migrations.CreateModel(
            name='Sales',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sales_dr', models.CharField(blank=True, default='', max_length=10, null=True)),
                ('sales_invoice', models.CharField(blank=True, default='', max_length=10, null=True)),
                ('sales_date', models.DateField(default=django.utils.timezone.now)),
                ('sales_updated', models.DateTimeField(auto_now=True)),
                ('sales_quantity', models.DecimalField(decimal_places=2, max_digits=12)),
                ('sales_unit_cost', models.DecimalField(decimal_places=6, max_digits=18)),
                ('sales_total_cost', models.DecimalField(decimal_places=6, max_digits=24)),
                ('sales_unit_price', models.DecimalField(decimal_places=6, max_digits=18)),
                ('sales_total_price', models.DecimalField(decimal_places=6, max_digits=24)),
                ('sales_margin', models.DecimalField(decimal_places=2, max_digits=15, null=True)),
                ('sales_margin_percent', models.DecimalField(decimal_places=4, max_digits=15, null=True)),
                ('sales_status', models.CharField(blank=True, choices=[('UNPAID', 'UNPAID'), ('PAID', 'PAID')], default='', max_length=6, null=True)),
                ('sales_note', models.TextField(blank=True, default='', null=True)),
                ('sales_paid_date', models.DateTimeField(blank=True, null=True)),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.customer')),
                ('product_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.product')),
            ],
            options={
                'verbose_name_plural': 'Sales',
                'ordering': ['sales_date'],
            },
        ),
        migrations.CreateModel(
            name='RawMaterials_Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=4, max_digits=10)),
                ('materials', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.rawmaterials')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.product')),
            ],
            options={
                'verbose_name_plural': 'Raw Material to Product Formulation',
            },
        ),
        migrations.CreateModel(
            name='RawMaterials_InventoryTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_date', models.DateField(default=django.utils.timezone.now)),
                ('materials_inventory_pk', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.rawmaterials_inventory')),
                ('product_inventory_pk', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.product_inventory')),
            ],
            options={
                'ordering': ['transaction_date'],
            },
        ),
        migrations.AddField(
            model_name='rawmaterials_inventory',
            name='supplier',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.supplier'),
        ),
        migrations.AddField(
            model_name='rawmaterials',
            name='material_unit',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.unit'),
        ),
        migrations.AddField(
            model_name='product_inventory',
            name='ingredients_transaction',
            field=models.ManyToManyField(through='api.RawMaterials_InventoryTransaction', to='api.RawMaterials_Inventory'),
        ),
        migrations.AddField(
            model_name='product_inventory',
            name='product_name',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.product'),
        ),
        migrations.AddField(
            model_name='product_inventory',
            name='supplier',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.supplier'),
        ),
        migrations.AddField(
            model_name='product',
            name='ingredients',
            field=models.ManyToManyField(through='api.RawMaterials_Product', to='api.RawMaterials'),
        ),
        migrations.AddField(
            model_name='product',
            name='product_unit',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.unit'),
        ),
        migrations.CreateModel(
            name='InventoryTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_date', models.DateField(default=django.utils.timezone.now)),
                ('inventory_pk', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.product_inventory')),
                ('sales_pk', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.sales')),
            ],
            options={
                'ordering': ['transaction_date'],
            },
        ),
    ]
